[tool.poetry]
name = "outcome-first-pydantic-generator"
version = "0.1.0"
description = "Outcome-first Pydantic model generator using LinkML with built-in evaluation"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "agents"}, {include = "dsl"}, {include = "graphiti"}, {include = "eval"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.6"
pydantic-settings = "^2.0"
linkml = "^1.7"
linkml-runtime = "^1.7"
instructor = "^1.3"
typer = {extras = ["all"], version = "^0.12"}
rich = "^13.0"
python-dotenv = "^1.0"
httpx = "^0.27"
requests = "^2.31"
neo4j = "^5.0"
pyyaml = "^6.0"
openai = "^1.0"
anthropic = "^0.25"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-asyncio = "^0.23"
pytest-cov = "^4.1"
black = "^24.0"
ruff = "^0.3"
mypy = "^1.9"
types-pyyaml = "^6.0"
types-requests = "^2.31"

[tool.poetry.group.optional]
optional = true

[tool.poetry.group.optional.dependencies]
llama-index-core = "^0.11"
langfuse = "^2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "linkml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "instructor.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "graphiti.*"
ignore_missing_imports = true

[tool.poetry.scripts]
outcome-first = "main:app"
